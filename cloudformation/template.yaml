AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  ApiGatewayInvokeUrl:
    Value: !Sub 'https://${RestApiGateway}.execute-api.${AWS::Region}.amazonaws.com/stage'
Resources:
  ApiGatewayDeployment:
    DependsOn:
      - eventPOSTMethod
    Properties:
      RestApiId: !Ref 'RestApiGateway'
      StageName: stage
    Type: AWS::ApiGateway::Deployment
  LegionTdDiscordBotCheckinLambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: legion-td-discord-bot-checkin-log-to-cloudwatch
    Type: AWS::IAM::Role
  LegionTdDiscordBotCheckinLambdaFunction:
    Properties:
      Code:
        S3Bucket: s3-buckets-lambdalayerbucket-1wvx0gjtmchjj
        S3Key: legion-td-discord-bot-checkin/archive-5ffb88391e.zip
      Description: legion-td-discord-bot-checkin Function
      Environment:
        Variables:
          APPLICATION_ID: '1015271519414399038'
          GOOGLE_API_CREDS: |-
            eyJ0eXBlIjoic2VydmljZV9hY2NvdW50IiwicHJvamVjdF9pZCI6ImxlZ2lvbi10ZC10ZXN0Iiwi
            cHJpdmF0ZV9rZXlfaWQiOiI2YWE2MTE3NWM2MjIxYjUyNDBiM2E1NmZjODlhOTBkM2YxNTUxZTA4
            IiwicHJpdmF0ZV9rZXkiOiItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2QUlCQURB
            TkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRRHVVWmtLVkZ0aW0vUkhcbk5j
            SXY3NWRUOWF0ZzU0cmMrdTk3bWZMWkkwdU5zYXMzeExGWDdEZE1zYkJyMkYrZFZ4Yy9OcDFmV1pN
            NzYwZzNcbjlEU3NveUlUTjdqK2xQaGR6K2NsYXRqdFB5VEllN3JpcG8xbFQxVU8vTFdKRUtZRmZQ
            VW8rZ0ppNm9vNVRKTTdcbi9yME45eGR0T0RmL0tBaXdReU82WjNueU9zQUpXamZXR1pCSVp1NVJu
            ZHhXRXJaQ1FyM21xd2RhMnpHVCt0WFJcbkRLeC91TUVQekZnUGthR21JVnFJaXpWTkFmZ0J3TUhZ
            b0dEMk1aTVNCUVJ4RXR4Z3FILzNUeXhUUmFJWU52NUhcbnFTTDlBdFM2OTdVOStWb1FaZ0FTWXB6
            dHE4dGYwTHVXQ3RVNnhTRjhaMDBKdVY3a2lvY3VrbWxwVFdWenNUTm9cbnFZOFVDc0xwQWdNQkFB
            RUNnZ0VBRVR2SEFJZGpjN09KdHN2aWtYc3NGY1JmcUJVYnBtbU0vNEtuOFlvZ1cyR1JcbmhlbTIx
            Zi85RmJ6ZkN2QVlKZlZzekc1RGMyZ3pySjI4ZzEzK1N5Sk1MZ05BWU84ejIxRFQ5Ync1YmUvbTFk
            L3JcblUvQXRyR1JRRWRLTGJCc2ttUGxWZEg1Skd1Um1xaDIrb3o3WXZBQkxhamlxV3FJSFV0RUt3
            elF3RGlpdngxMDNcbml2WWZHZXgrSEt5clkwR05oaHc4R0tFdFoyVXhWOGkvTjVZdlZobTBFYzB0
            QVVUMTM3clcxZEhkMnZzZTJtejlcbkxBSFdvaVQrclRRM3BFQ3dXNHhmbTEvTXpZeTBZSlEyaVo3
            Q3NVUnMyMnJRb1JEcmJHRkxsUVA4N1EvY0J0cUJcbjRCaEp1QjkwZVZXZnF2UU00Z3hNS1ZUb0xy
            SnVyRDRsNWJKSG9tMTh5UUtCZ1FEL2xCZVVWS2Z0dGl4RHBabDBcbnMydEowTVN6bUpDUVBaZFYz
            Ly9pb3pqa1drREdSSmc0SHdEQnZibzkyS3pqVHE2a2pOdDRzU2phV2hvUWxYYUNcbmFZL3pvYTF3
            VnFsdUY2TjRkdUxkdnBsWStpVS9OWTFWRHZvOXVPRWlKd0FWcE53aEhGeHNYYXE4clB1TDFydmZc
            bnJwWGVLTUJHZDRtdUd3TnNERDZaS2hRdXZRS0JnUUR1dGpmdFBTSW1mZVBFM0s1NXc0cEhGa0VL
            SEU2a1JnKzNcbnh6TktHajFrbFA3QlZPU1c3YnRkSEtJdnhyODhMTk9qTGZ5WjZKZnNlOStpbVRh
            L0tmeCsxL2tibHEvYUF0VEZcbkpIN0ZGYkcxS2k4TjV0amdFVzgzNXlNVDBLOUZNTCt1TkZBOVNQ
            ZXVtZUpGR1FwenVnVVNCSUwvM1BZZk9QR25cbld0TGZqRnlOblFLQmdIQU5RSTFDMUdFdTlwY3Qr
            bXFrNHd2NDROU1F0Z2pYU0F0WmF2bTFjQk1GMHRKYWJwWmtcbldWT1gyQmlYYjYwMDZQS3g0dU0y
            WU4vaWt2emtXcEh3c0RFem1EUGhldVVPcmhmNW41dHluZzdabFF6eWNLVnpcbkxKbDAvaGVZRzd4
            aGpEVmtGczFYLzZ3Njl3b25PalZtZU1SdS8yV2xzUkpKTzZYYWRITjRkR0xOQW9HQU95ckhcbktm
            SmhLSkZEaDJQN2l3ckFsMllZc056YlVUUmNhUHppNVpjamFHN1Z4aTI0aXdCWjFIWm9iTmNpUjFR
            RkVRa3dcbjl5VURvd1lCSkZnOWpaeG1qVG9TOEplazlyQ0U5R2hiVTVaUStjcCs1ejgwdWpVWUVB
            OG1UcDhIRW10RzEzTDRcbkFIaTVpM2x3OEJlSTA2NWoyMWRxOE9oZnlOVmdjRTYrdmRJWWpyRUNn
            WUEyQ0piT2cvWUFwcU40Q0loSDBma1NcblNiS0V1TTI2d04vWmxZNzdrQmNIKzRoNGRGdmpsbXg4
            MTVWaE5veVFXOUdIL0FtR1NGaDRlQ2JXWThYU2ZOSFlcblhORTR4aWhSd2thT0hGRXNGMjc3bURh
            VWFvaXR5MzJPeE1QT2ZlUFZScHlBOXFqS3dGc3l3dlFFa2xTZS9yYmFcbkxjT1JBSmp0UVZFOWth
            dS9Ec1NSYVE9PVxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwiY2xpZW50X2VtYWlsIjoi
            ZGlzY29yZC1ib3RAbGVnaW9uLXRkLXRlc3QuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCJjbGll
            bnRfaWQiOiIxMTc4NjQ0MjYwMzIwODgyMzQ4ODUiLCJhdXRoX3VyaSI6Imh0dHBzOi8vYWNjb3Vu
            dHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwidG9rZW5fdXJpIjoiaHR0cHM6Ly9vYXV0aDIu
            Z29vZ2xlYXBpcy5jb20vdG9rZW4iLCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiJodHRw
            czovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLCJjbGllbnRfeDUwOV9jZXJ0
            X3VybCI6Imh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkv
            ZGlzY29yZC1ib3QlNDBsZWdpb24tdGQtdGVzdC5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSJ9
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 'LegionTdDiscordBotCheckinLambdaExecutionRole.Arn'
      Runtime: python3.9
    Type: AWS::Lambda::Function
  LegionTdDiscordBotHandlerLambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - lambda:InvokeFunction
                Effect: Allow
                Resource:
                  - !GetAtt 'LegionTdDiscordBotCheckinLambdaFunction.Arn'
          PolicyName: legion-td-discord-bot-handler-invoke-checkin-function
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - '*'
          PolicyName: legion-td-discord-bot-handler-log-to-cloudwatch
    Type: AWS::IAM::Role
  LegionTdDiscordBotHandlerLambdaFunction:
    Properties:
      Code:
        S3Bucket: s3-buckets-lambdalayerbucket-1wvx0gjtmchjj
        S3Key: legion-td-discord-bot-handler/archive-53ef479a46.zip
      Description: legion-td-discord-bot-handler Function
      Environment:
        Variables:
          DISCORD_PUBLIC_KEY: 42be1d3d4136ed14b3a46a60bb11fe92c73c0d84be9337f3e6f11e21edf6e75d
          LAMBDA_CHECKIN: !GetAtt 'LegionTdDiscordBotCheckinLambdaFunction.Arn'
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 'LegionTdDiscordBotHandlerLambdaExecutionRole.Arn'
      Runtime: python3.9
    Type: AWS::Lambda::Function
  RestApiGateway:
    Properties:
      Description: !Sub '${AWS::StackName}-rest-api'
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: !Sub '${AWS::StackName}-rest-api'
    Type: AWS::ApiGateway::RestApi
  eventApiResource:
    Properties:
      ParentId: !GetAtt 'RestApiGateway.RootResourceId'
      PathPart: event
      RestApiId: !Ref 'RestApiGateway'
    Type: AWS::ApiGateway::Resource
  eventPOSTMethod:
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt 'LegionTdDiscordBotHandlerLambdaFunction.Arn'
      ResourceId: !GetAtt 'eventApiResource.ResourceId'
      RestApiId: !Ref 'RestApiGateway'
    Type: AWS::ApiGateway::Method
  eventPOSTMethodPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt 'LegionTdDiscordBotHandlerLambdaFunction.Arn'
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiGateway}/*/POST/event'
    Type: AWS::Lambda::Permission
